#Permet d'afficher les infos telles que   - @ConditionalOnClass..
debug=false
#spring.main.banner-mode=off
spring.banner.location=classpath:banner.txt
application.title=Travel Post Services
application.version=1.0.1-SNAPSHOT

service.port.local=8080
service.port.aws=5000
service.profile=dev

############################################### PROFILE AND TIMEZONE ###################################################
#spring.profiles.active=work
#spring.profiles.active=dev
spring.profiles.active=${service.profile}
security.basic.enabled=false
spring.jackson.time-zone=Europe/Paris

############################################### TOMCAT , SSL AND REDIRECT PAGES ########################################

#Server Config SSL
#desactiver cela en cas de test
server.servlet.context-path=/services
#request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
spring.codec.log-request-details=false
server.port=${service.port.local}

server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto

#server.ssl.key-store-type=jks
#server.ssl.key-store=classpath:keystore/selfsigned.jks
#server.ssl.key-store-password=tomcat
#server.ssl.key-alias=tomcat
security.require-ssl=true

#REDIRECT PAGE
redirect.page=/index.html
redirect.page.error=/index.html

#CONFIRMATION PAGES
redirect.confirm.ok.page=/index.html
redirect.confirm.error.page=/index.html

ws.redirect.user=redirect:/ws/announce/announces


############################################### DATABASE CONFIG ########################################################

datasource.url.h2.home=jdbc:h2:tcp://localhost/../../../db/manager
datasource.url.h2.work=jdbc:h2:file:F:/DevJava/ws/database-h2/travelpost/manager;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE

datasource.h2.platform.home=org.hibernate.dialect.H2Dialect
datasource.h2.platform.work=cm.framework.ds.h2.dialect.PersonalH2Dialect

datasource.h2.driver.class=org.h2.Driver

datasource.h2.username=V6hnBZj+3gcUu4GDoRNTvgvMErMSDnkTUVTusqUe2O/lHT6ogMR3TYUC1EnXUrDS
datasource.h2.password=M6LT2BQ922KBpGjLlU8lOYoOBFSgqxCn4M/SZTTcGazIVbJM76vee/Bn0SIvjTpt

datasource.h2.default.schema=PUBLIC

datasource.url.aws.inst.one=jdbc:mysql://aa1i1evdcivi12t.cpfvhls4tre4.eu-south-1.rds.amazonaws.com:3306/cl6j8lyroz9fs4ut
datasource.url.aws.inst.two=jdbc:mysql://aatqhz7nh5q7zf.cpfvhls4tre4.eu-south-1.rds.amazonaws.com:3306/cl6j8lyroz9fs4ut
datasource.aws.username=glQQQiRECReNPXAEqoMXOSlCEEDfu4EtbqKY1Whkbb7bSqms1NKD6T9bOziQM1ma
datasource.aws.password=RY7v27LsUeDuJ11w/ZflSVn6sNNkNQC5PNY2ft0UpskUm90p5Lr9UMQLHbI5py8Y
datasource.aws.driver.class=com.mysql.cj.jdbc.Driver
datasource.aws.platform=org.hibernate.dialect.MySQLDialect
datasource.aws.default.schema=cl6j8lyroz9fs4ut


spring.datasource.url=${datasource.url.h2.home}
spring.datasource.driverClassName=${datasource.h2.driver.class}
spring.datasource.username=${datasource.h2.username}
spring.datasource.password=${datasource.h2.password}
spring.jpa.database-platform=${datasource.h2.platform.home}


################################ HIBERNATE DATASOURCE CONFIGURATION ############################

# Database
db.url=${spring.datasource.url}
hibernate.datasource.url=${spring.datasource.url}

db.driver= ${datasource.h2.driver.class}
db.username=${datasource.h2.username}
db.password=${datasource.h2.password}
hibernate.default_schema=${datasource.h2.default.schema}

# Hibernate
#configuration de dessus plus la ligne en dessous
entitymanager.packagesToScan=cm.travelpost.tp.*

connection.pool_size=1
transaction.factory_class=org.hibernate.transaction.JDBCTransactionFactory
current_session_context_class=thread
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
hibernate.enable_lazy_load_no_trans=true

############################################### MULTIPART CONFIG AND FOLDERS PATH ######################################


#IMAGE SAVE FOLDER
profile.user.img.folder=images/user/
profile.announce.img.folder=images/announce/
file.storage.upload.folder=storage/

image.dimension.limit.width=300
image.dimension.limit.heigth=300
image.dimension.resize.width=300
image.dimension.resize.heigth=300

#UPLOAD IMAGE LIMIT SIZE
#spring.servlet.multipart.max-file-size Maximum single file upload
#spring.servlet.multipart.max-request-size total file upload maximum

#Multipart Properties
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=1MB
# Max Request Size
spring.servlet.multipart.max-request-size=2MB

############################################### DDL DATABASE CONFIG AND ################################################

#Lazy loading spring boot pour accelerer le demarrage
#spring.main.lazy-initialization=true



#Generate ddl
#spring.jpa.generate-ddl=true
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=none
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create-only
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=ddl/travelpost-0.0.1_20220X.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.update-target=ddl/ws-upd-0.0.1.sql
spring.jpa.properties.hibernate.format_sql=true


#spring.jpa.generate-ddl=true

#Ceci permet d'effectuer les operations sur la base de donnees
spring.jpa.hibernate.ddl-auto=none


#Hibernate Configuration(pas important on a deja defini ca plus haut avec Spring)

#Hibernate ddl auto (create, create-drop, validate, update)  fonctionne et important!
hibernate.hbm2ddl.auto=none 
#hibernate.hbm2ddl.auto=create
#hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
hibernate.show_sql=true
hibernate.format_sql=true
#hibernate.generate-ddl=true
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext


############################################### SPRING  & HIBERNATE CONFIG #############################################

#Pour gerer l'insertion des entités via batch
spring.jpa.properties.hibernate.order_inserts=true
spring.devtools.add-properties=false
#Lazy loading spring boot pour accelerer le demarrage
#spring.main.lazy-initialization=true

#SPRING BATCH
#false: dit a springboot de ne pas demarrer spring batch durant le demarrage de l'application
spring.batch.job.enabled=false
#Permet de gerer le cas des beans qui ont le meme nom
# par exemple il y a le bean de hibernate transactionManager et celui
# de la configuration des batchs qui a le meme nom et au demarrage le
# programme va en erreur
spring.main.allow-bean-definition-overriding=true


############################################### LOGGING QUERY CONFIG ###################################################

#Print parameters query
#org.hibernate.type.descriptor.sql.BasicBinder=trace

############################################### LOGGING LOGBACK CONFIG #################################################

# Output to a temp_folder/file
#logging.file.name=logs/tp-application.log

# Logging pattern for file
#logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%
#logging.file.max-size= 5MB
#logging.level.web=DEBUG

#N° max de file log
#logging.file.max-history=30

#Clean file log history on start
#logging.file.clean-history-on-start=false


# In properties file
#logging.level.org.springframework=error
#logging.level.cm.travelpost.tp=info
#logging.level.org.hibernate.stat=error
#logging.level.org.hibernate=trace
#logging.level.org.hibernate.SQL=info

#If want to see very extensive logging
#spring.jpa.properties.hibernate.generate_statistics=false
#hibernate.generate_statistics=true


############################################### TRAVEL POST APP CONSTANTS ##############################################

tp.travelpost.qr.code.issuer=TravelPostServices
tp.travelpost.postman.enable=true
tp.travelpost.active.session.filter.enable=false
tp.travelpost.active.registration.enable=true

tp.travelpost.app.escape.announces=ws/announce/announces?page=
tp.travelpost.app.escape.other=&source=OTHER
tp.travelpost.app.escape.home=&source=HOME


tp.travelpost.app.domain=www.travelpost-services.info
tp.travelpost.app.email=travelpostservices@gmail.com

#AUTH_API_KEY
custom.api.auth.http.tokenName=XLS0KD6DhhMKJ0ND1Bt2yg5xTKMIDWdQR0xDL+VWGFenGcVn4okXXQEwJjfw+d9CirtRdNBhu9R7xmTHJpRZRw==
#custom.api.auth.http.tokenName=AUTH_API_KEY
custom.api.auth.http.tokenValue=QDKCi8Z8UzmGtVKqoT4sqcDLXeiX2JJaXExlJOvOqhF6zevs3fo+wGWg7DPfveND
custom.user.guest=7xssksbptxg/vjWJvgz9fKBP8Fp++FkR5j9pJIoYLZ1ipdAsi6t37MLqx3Vla6D/



url.service=ws

constant.prod_cat_code=AUTRES
constant.buyer=B
constant.seller=S
constant.default.token=PM
constant.announceType.aeroplane=A
constant.announceType.auto=V
constant.announceType.nave=N
constant.subject=SUBJECT
pagination.size=5

custom.session.user=session-user

jwt.expirationDateInMs=72000000
jwt.short.expirationDateInMs=300000

#SWAGGER

#Pour desactiver swagger en production
swagger.prod.enabled=false

swagger.api.contact = Dimitri S. / Ludovic N.
swagger.api.info.title = Tr@vel Post REST API
swagger.api.info.description = Tr@vel Post REST API reference for developers
swagger.api.info.licence = Tr@vel Post License
swagger.api.info.version = 1.0

swagger.api.groupname.authentication = Authentication
swagger.api.groupname.announce = Announce
swagger.api.groupname.user = User
swagger.api.groupname.message = Message
swagger.api.groupname.role = Role
swagger.api.groupname.review = Review
swagger.api.groupname.mail = Mail
swagger.api.groupname.reservation = Reservation
swagger.api.groupname.image = Image
swagger.api.groupname.dashboard = Dashboard
swagger.api.groupname.websocket = Websocket-notification
swagger.api.groupname.notification = Notification
swagger.api.groupname.city = City
swagger.api.groupname.sms = Sms OTP Services
swagger.api.groupname.totp =  TOTP Services

############## STOMP SOCKET  #################

#Disable Notification websocket
travel.post.stomp.notification.enable=true

travel.post.stomp.notification.origin=*
travel.post.stomp.notification.origin.localhost=http://localhost:8080
travel.post.stomp.notification.origin.localhost.ssl=https://localhost:8443
travel.post.stomp.notification.origin.localhost.aws=https://localhost:5000
travel.post.stomp.notification.origin.localhost.127=http://127.0.0.1:8080
travel.post.stomp.notification.origin.localhost.ssl.127=https://127.0.0.1:8443
travel.post.stomp.notification.origin.prod.ssl=https://travelpost-cm.herokuapp.com
travel.post.stomp.notification.origin.prod.aws=http://travelpost-services.eu-south-1.elasticbeanstalk.com

travel.post.stomp.notification.endpoint=/notifications

travel.post.stomp.notification.subscribe.item.send=/notification/item
travel.post.stomp.notification.subscribe.user.send=/notification/user
travel.post.stomp.notification.subscribe.comment.send=/notification/comment
travel.post.stomp.notification.subscribe.announce.send=/notification/announce

travel.post.stomp.notification.broker.notification=/notification
travel.post.stomp.notification.broker.user=/user
travel.post.stomp.notification.prefix.destination=/swns


############################################### MAIL CONFIG ############################################################

############## GMAIL CONFIG #################
mail.debug=true
mail.transport.protocol=smtp
mail.smtp.auth=true
mail.smtp.starttls.enable=true
mail.smtp.starttls.required=true
mail.smtp.ssl.enable=true
mail.smtp.host=smtp.gmail.com
mail.smtp.port= 465
mail.admin.username=travelpostservices@gmail.com
mail.admin.password=ENC(5GAChve3Djq6pdk+b19Tni++FpzXnjkokyn7g8RkCiEwjKN5g7L8u8rNUWuOeB8nU64BHc59P6jyHkdQjFgE3g==)

############## SENDGRID CONFIG #################
sendgrid.api.key=ENC(/VUbIvPUsASWWm+ZXh/LYZXTT4ZLxFBYj8w01CEqjRQvpg1HJ9nrvCZPXBnekgUZAhDZPV21JcJZ4QIrdG5UEwFuvuluDgLM+DAc2KIWQ0et2pLXOm0FWLhujqQk9nhcOty29Ze7LHhT0Bu+KiAj3A==)
sendgrid.admin.password=ENC(tmI2ogykRjQxMoE8MBo8en3VNrekOqkVw5zJhlT4KXb7vhPNzMS0k8ZSb9wrgN3D+treTgyunqV9yPcDLspykQ==)
sendgrid.admin.email=packagemanager2020@gmail.com
sendgrid.mail.sender.user=dimipasc@hotmail.com
sendgrid.mail.sender.password=ENC(FXZSpoAreCwAsyIkQegIMKbvdoNPFF1zrzehlciC0d+ByZB8FUKNljVqhLhIoN60ZFn0juj/9estsYv2dlsiOA==)
sendgrid.mail.admin.email=packagemanager2020@gmail.com
sendgrid.mail.email.bcc=packagemanager2020@gmail.com
sendgrid.mail.email.cc=packagemanager2020@gmail.com

############### MAIL JET API ####################
mail.jet.api.key=ENC(Cmp3xVHl7KEqVU91B65OWgvtvFAgdpc5DrJadf75aG/ujzE8N4CNXKKxkdVjpaToN8rQJ5GwyLQKly1ygilGdwHLUUIO93I3m5yRehvWHOo=)
mail.jet.api.secret=ENC(ZWrIQpa2aX+cMdmDDPWPyhQHnfQwOtY47MsEdTKAiH9Y85IAZFWTRYV/N3DO6eNNf4Tar13Lf/zrYlTccbdJqPxnk4qfGqyotF8a+feyyvA=)
mail.jet.api.version=v3.1
#-----A modifier si tout fonctionne bien et mettre le mail travelspostservices@gmail.com
mail.jet.api.sender=unkutnation@gmail.com
mail.jet.api.sender.bis=travelpostservices@gmail.com

############### OTHER MAIL CONFIG #################

mail.email.from=Travel Post

#Below Properties are needed for maintaining the session.
#Two Step verification should not be enabled for gmail.
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true

# SSL, post 465
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
#spring.mail.properties.mail.smtp.socketFactory.fallback = false


################################################### SPRING ACTUATOR ####################################################
#management.security.enabled = false
#management.port = 9000
# Open all endpoints, Actuator only exposes health and info endpoints by default in Spring-boot
#management.endpoints.web.exposure.include=*
#management.endpoint.startup.enabled=true


################################################ SPRING ADMIN SERVER ####################################################


#
#spring.application.name=Travel Post Services
#
#
#management.context-path=/
#spring.boot.admin.url=http://localhost:8093
#
#
#logging.level.org.springframework.security= DEBUG
#
#management.security.enabled=true
#
#
#spring.boot.admin.client.metadata.user.name = bangou
#spring.boot.admin.client.metadata.user.password = bangou
#
#
##configs to connect to a secured server
#spring.boot.admin.client.username=bangou
#spring.boot.admin.client.password=bangou
#
#spring.boot.admin.client.url= http://localhost:8080
#
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always
##management.endpoints.web.exposure.include=httptrace,loggers,health,info,metrics


################################################### OPENTRACING & JAEGER (https://www.jaegertracing.io/download/) ######

jaeger.agent.host=localhost
jaeger.agent.port= 16686
#opentracing.jaeger.http-sender.url = http://localhost:8080/api/traces
opentracing.jaeger.log-spans = false

#################################################### SERVER SESSION TIMEOUT CONFIG #####################################

server.session.cookie.max-age=300
spring.session.timeout.seconds=1800

#server.session.cookie.comment = #Comment session cookie.
#server.session.cookie.domain =  #Session cookie domain.
#server.session.cookie.http-only =The #"HttpOnly" sign is a session cookie.
#server.session.cookie.max-age =  # The maximum age of the session cookie (in seconds).
#server.session.cookie.name =  #Session cookie name.
#server.session.cookie.path =  # The path of the session cookie.
#server.session.cookie.secure =  The #"Secure" sign is a session cookie.
#server.session.persistent =  false #Continue session data between restarts.
#server.session.store-dir =  # The directory used to store session data.
#server.session.timeout =  #Session timeout (seconds).
#server.session.tracking-modes = #Session tracking mode (one or more of the following: "cookie", "url", "ssl").

######################################### CUSTOM BAT TO START H2 #######################################################

#bat.file.path.property=/Users/liondx/Documents/databases/engine/h2/bin/h2.sh

####################################### UPGRADE SPRINGBOOT VERSION #####################################################
#Modifications faites apres upgrade versione SpringBoot à la version 2.6.4
#The dependencies of some of the beans in the application context form a cycle:
#to break the cycle automatically
spring.main.allow-circular-references=true

#Pour faire foncitonner springfox avec springboot 2.6.X
#spring.mvc.pathmatch.matching-strategy=ant-path-matcher


############################################# HEROKU deployment  #######################################################
web= java -Dserver.port=$PORT -jar target/travelpost-1.0.0-beta-ssl.jar

