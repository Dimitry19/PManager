#Permet d'afficher les infos telles que   - @ConditionalOnClass..
debug=true

#trace=true
#logging.level.org.springframework.boot.autoconfigure=ERROR


#PROFILE
#spring.profiles.active=dev
spring.profiles.active=prod
security.basic.enabled=false

#Server Config SSL
#desactiver cela en cas de test
server.servlet.context-path=/pmanager
#request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
enableLoggingRequestDetails=false
#server.port=8080

#REDIRECT PAGE
redirect.page=/pmanager/index.html


#IMAGE SAVE FOLDER
profile.user.img.folder=images/user/
profile.announce.img.folder=images/announce/
file.storage.upload.folder=storage/

image.dimension.limit.width=300
image.dimension.limit.heigth=300
image.dimension.resize.width=300
image.dimension.resize.heigth=300

#UPLOAD IMAGE LIMIT SIZE
#spring.servlet.multipart.max-file-size Maximum single file upload
#spring.servlet.multipart.max-request-size total file upload maximum

#Multipart Properties
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=1MB
# Max file size.
spring.servlet.multipart.max-file-size=1MB
# Max Request Size
spring.servlet.multipart.max-request-size=2MB


#Lazy loading spring boot pour accelerer le demarrage
#spring.main.lazy-initialization=true


############################################### DATABASE CONFIG START ###################################

#Physical Database
#---------H2-CONFIGURATION-------------
#spring.datasource.url=jdbc:h2:tcp://localhost/../../../db/manager
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Enabling H2 Console
#spring.h2.console.enabled=false

# Custom H2 Console URL
#spring.h2.console.path=/h2-console
#---------HIBERBNATE-CONFIGURATION-------------

# Database
#db.driver= org.h2.Driver
#db.url= jdbc:h2:tcp://localhost/../../../db/manager
#hibernate.datasource.url= jdbc:h2:tcp://localhost/../../../db/manager
#db.username= sa
#db.password=
#hibernate.default_schema=PUBLIC
#---------H2-CONFIGURATION-------------

#Physical Database
#---------MYSQL-CONFIGURATION-------------
spring.datasource.url=jdbc:mysql://bbxnc20nyku1xg7g:yxs7rn5rktl3om3r@i54jns50s3z6gbjt.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/cl6j8lyroz9fs4ut
#Embedded Database
#spring.datasource.url=jdbc:h2:file:~/packagemanager

spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=bbxnc20nyku1xg7g
spring.datasource.password=kj3dckh81knr5wfe
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

#---------HIBERBNATE-CONFIGURATION-------------

# Database
db.driver=com.mysql.cj.jdbc.Driver
db.url= jdbc:mysql://bbxnc20nyku1xg7g:kj3dckh81knr5wfe@i54jns50s3z6gbjt.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/cl6j8lyroz9fs4ut
hibernate.datasource.url= jdbc:mysql://bbxnc20nyku1xg7g:kj3dckh81knr5wfe@i54jns50s3z6gbjt.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/cl6j8lyroz9fs4ut
db.username=bbxnc20nyku1xg7g
db.password=kj3dckh81knr5wfe
hibernate.default_schema=cl6j8lyroz9fs4ut

#---------MYSQL-CONFIGURATION-------------


#---------COMMON HIBERNATE-CONFIGURATION-------------
# Hibernate
#configuration de dessus plus la ligne en dessous
entitymanager.packagesToScan=cm.packagemanager.pmanager.*

connection.pool_size=1
transaction.factory_class=org.hibernate.transaction.JDBCTransactionFactory
current_session_context_class=thread
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
hibernate.enable_lazy_load_no_trans=true



############################################### DATABASE CONFIG END ###################################

#Turn Statistics on and log SQL stmts
spring.jpa.show-sql=true

#Print parameters query
org.hibernate.type.descriptor.sql.BasicBinder=trace

#Generate ddl
#spring.jpa.generate-ddl=true
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=update
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create-only
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=ddl/packagemanager-0.0.1-SNAPSHOT_202111.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.update-target=ddl/ws-upd-0.0.1.sql
spring.jpa.properties.hibernate.format_sql=true


#spring.jpa.generate-ddl=true

####Ceci permet d'effectuer les operations sur la base de donnees
#spring.jpa.hibernate.ddl-auto=update



#Hibernate Configuration(pas important on a deja definit ca plus haut avec Spring)
#H2
#hibernate.dialect=org.hibernate.dialect.H2Dialect
#Hibernate ddl auto (create, create-drop, validate, update)  fonctionne et important!
hibernate.hbm2ddl.auto=none 
#hibernate.hbm2ddl.auto=create
#hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
hibernate.show_sql=true
hibernate.format_sql=true
#hibernate.generate-ddl=true
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

#MySQL
#hibernate.dialect=org.hibernate.dialect.MySQLDialect



#Pour gerer l'insertion des entités via batch
spring.jpa.properties.hibernate.order_inserts=true

#------------LOGGIN LOGBACK START---------------------#


# Output to a temp_folder/file
logging.file.name=logs/tp-application.log

# Logging pattern for file
logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%
logging.file.max-size= 1MB
#logging.level.web=DEBUG


#N° max de file log
logging.file.max-history=30

#Clean file log history on start
logging.file.clean-history-on-start=false

# In properties file
logging.level.org.springframework=error
logging.level.cm.packagemanager.pmanager=error

logging.level.org.springframework.web=INFO
logging.level.guru.springframework.controllers=debug
logging.level.org.hibernate=error

#If want to see very extensive logging
spring.jpa.properties.hibernate.generate_statistics=false
#logging.level.org.hibernate.stat=debug

#------------LOGGIN LOGBACK END---------------------#

spring.devtools.add-properties=false


#AUTH_API_KEY
custom.api.auth.http.tokenName=AUTH_API_KEY
custom.api.auth.http.tokenValue=abcd123456
custom.user.guest=Guest

#WS
url.service=ws

ws.redirect.user=redirect:/ws/announce/announces




#---------------------------------------------------------------------------
#MAIL PROPERTIES

#--------------------------Google Config
mail.debug=true
mail.transport.protocol=smtp
mail.smtp.auth=true
mail.smtp.starttls.enable=true
mail.smtp.starttls.required=true
mail.smtp.ssl.enable=true
mail.smtp.host=smtp.gmail.com
mail.smtp.port= 465
mail.admin.username=packagemanager2020@gmail.com
mail.admin.password=pmanager2020

#-------------------------------------

#mail.smtp.auth=true
#mail.smtp.starttls.enable=true
#mail.smtp.host=smtp.live.com
#mail.smtp.port= 25


mail.email.from=Travel Post

#Sendgrid
sendgrid.api.key=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
sendgrid.admin.password=p@ckagemanag3r!!
sendgrid.admin.email=packagemanager2020@gmail.com
sendgrid.mail.sender.user=dimipasc@hotmail.com
sendgrid.mail.sender.password=Orlynn1anais1986yann
sendgrid.mail.admin.email=packagemanager2020@gmail.com
sendgrid.mail.email.bcc=packagemanager2020@gmail.com
sendgrid.mail.email.cc=packagemanager2020@gmail.com


#spring.mail.host = smtp.gmail.com
#spring.mail.username = packagemanager2020@gmail.com
#spring.mail.password = pmanager2020

#Below Properties are needed for maintaining the session.
#Two Step verification should not be enabled for gmail.

# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true

# SSL, post 465
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
#spring.mail.properties.mail.smtp.socketFactory.fallback = false
#------------------------------------------------------------------------------------------------------------------------------

#CONSTANTS
constant.prod_cat_code=-
constant.buyer=B
constant.seller=S
constant.default.token=PM
constant.announceType.aeroplane=A
constant.announceType.auto=V
constant.announceType.nave=N
constant.subject=SUBJECT
pagination.size=5

#Permet de gerer le cas des beans qui ont le meme nom
# par exemple il y a le bean de hibernate transactionManager et celui
# de la configuration des batchs qui a le meme nom et au demarrage le
# programme va en erreur
spring.main.allow-bean-definition-overriding=true

#SPRING BATCH
#false: dit a springboot de ne pas demarrer spring batch durant le demarrage de l'application
spring.batch.job.enabled=false


#SPRING ACTUATOR
#management.security.enabled = false
#management.port = 9000
# Open all endpoints, Actuator only exposes health and info endpoints by default in Spring-boot
#management.endpoints.web.exposure.include=*
#management.endpoint.startup.enabled=true


#OPENTRACING & JAEGER

jaeger.agent.host=localhost
jaeger.agent.port= 16686
opentracing.jaeger.log-spans = false

#SWAGGER
swagger.api.groupname.announce = announce
swagger.api.groupname.user = user
swagger.api.groupname.message = message
swagger.api.groupname.role = role
swagger.api.groupname.review = review
swagger.api.groupname.mail = mail
swagger.api.groupname.reservation = reservation
swagger.api.groupname.image = image
swagger.api.groupname.communication = dashboard-communication
swagger.api.groupname.websocket = websocket-notification
swagger.api.groupname.notification = notification





#CUSTOM ERROR PAGE
#server.error.whitelabel.enabled=false
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration

#Gestion des pages statiques
#spring.thymeleaf.cache = false



#NOTIFICATION FIREBASE https://blog.mestwin.net/send-push-notifications-from-spring-boot-server-side-application-using-fcm/
#https://console.firebase.google.com/u/0/project/demonotifications-7d681/settings/serviceaccounts/adminsdk
app.firebase-configuration-file=google-firebase/demonotifications.json
app.firebase-configuration-url=https://fcm.googleapis.com/fcm/send
app.firebase-configuration-server-key=AAAAQAV7XxA:APA91bGcY7R0KVoNP-9-JsNII62F2Vy-r_FzzqzMDqOo4SSKsVxdnieysqpNiQjIZYfqMUIpgUcfg8-Ei9d1CiTvi7xPCAZRlOvT9gl9CjNZxs5aKdZc9DH87LWbxWZh3IjwktFj6jVV
app.notifications.defaults={topic: 'common', title: 'Common topic - Hello', message: 'Sending test message \uD83D\uDE42', token: 'ss22t03wz208eg:APA2idkkow223FE_0v5yHxqCLTyxAQafj6nWaqi4QzwZTW004q1PUux63UsFN', payloadMessageId: '123', payloadData: 'Hello. This is payload content.'}


#SERVER SESSION TIMEOUT CONFIG
server.session.cookie.max-age=300
spring.session.timeout.seconds=1800

custom.session.user=session-user

jwt.expirationDateInMs=7200000

#server.session.cookie.comment = #Comment session cookie.
#server.session.cookie.domain =  #Session cookie domain.
#server.session.cookie.http-only =The #"HttpOnly" sign is a session cookie.
#server.session.cookie.max-age =  # The maximum age of the session cookie (in seconds).
#server.session.cookie.name =  #Session cookie name.
#server.session.cookie.path =  # The path of the session cookie.
#server.session.cookie.secure =  The #"Secure" sign is a session cookie.
#server.session.persistent =  false #Continue session data between restarts.
#server.session.store-dir =  # The directory used to store session data.
#server.session.timeout =  #Session timeout (seconds).
#server.session.tracking-modes = #Session tracking mode (one or more of the following: "cookie", "url", "ssl").


#bat.file.path.property=/Users/liondx/Documents/databases/engine/h2/bin/h2.sh




#Modifications faites apres upgrade versione SpringBoot à la version 2.6.4
#The dependencies of some of the beans in the application context form a cycle:
#to break the cycle automatically
spring.main.allow-circular-references=true

#Pour faire foncitonner springfox avec springboot 2.6.X
#spring.mvc.pathmatch.matching-strategy=ant-path-matcher

#HEROKU deployment
web= java -Dserver.port=$PORT -jar target/pmanager-1.0.0-beta-ssl.jar


