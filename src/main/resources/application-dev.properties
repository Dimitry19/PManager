#Permet d'afficher les infos telles que   - @ConditionalOnClass..
debug=true
#trace=false
#logging.level.org.springframework.boot.autoconfigure=ERROR

#REDIRECT PAGE
redirect.page=/pmanager/index.html


#IMAGE SAVE FOLDER
profile.user.img.folder=images/user/
profile.announce.img.folder=images/announce/

#UPLOAD IMAGE LIMIT SIZE
#spring.servlet.multipart.max-file-size Maximum single file upload
#spring.servlet.multipart.max-request-size total file upload maximum
spring.servlet.multipart.max-file-size=3MB
spring.servlet.multipart.max-request-size=5MB

#Lazy loading spring boot pour accelerer le demarrage
#spring.main.lazy-initialization=true

#Physical Database
spring.datasource.url=jdbc:h2:tcp://localhost/../../../db/manager
#spring.datasource.url=jdbc:h2:file:/Users/liondx/Documents/Sviluppo/ws/PackManager/db/pm
#spring.datasource.url=jdbc:h2:file:/data/pm

#Embedded Database
#spring.datasource.url=jdbc:h2:file:~/packagemanager

spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Enabling H2 Console
spring.h2.console.enabled=false

# Custom H2 Console URL
spring.h2.console.path=/h2-console

#Turn Statistics on and log SQL stmts
spring.jpa.show-sql=true

#Print parameters query
org.hibernate.type.descriptor.sql.BasicBinder=trace





#Generate ddl
#spring.jpa.generate-ddl=true
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=update
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=ddl/packagemanager-0.0.1-SNAPSHOT_202111.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.update-target=ddl/ws-upd-0.0.1.sql
spring.jpa.properties.hibernate.format_sql=true


#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update



#Hibernate Configuration(pas important on a deja definit ca plus haut avec Spring)
#H2
#hibernate.dialect=org.hibernate.dialect.H2Dialect
#Hibernate ddl auto (create, create-drop, validate, update)  fonctionne et important!
hibernate.hbm2ddl.auto=none 
#hibernate.hbm2ddl.auto=create
#hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
hibernate.show_sql=true
hibernate.format_sql=true
#hibernate.generate-ddl=true
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

#MySQL
#hibernate.dialect=org.hibernate.dialect.MySQLDialect



#Pour gerer l'insertion des entités via batch
spring.jpa.properties.hibernate.order_inserts=true

#Loggin -->File lo4j2.xml
# Output to a temp_folder/file
logging.file.name=logs/application.log

# Logging pattern for file
logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%
logging.level.web=DEBUG
logging.file.max-size= 1MB

#N° max de file log
logging.file.max-history=30

#Clean file log history on start
logging.file.clean-history-on-start=true


# In properties file
logging.level.org.springframework=ERROR
#logging.level.cm.packagemanager.pmanager=ERROR

#If want to see very extensive logging
spring.jpa.properties.hibernate.generate_statistics=false
logging.level.org.hibernate.type=trace
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate.stat=debug

spring.devtools.add-properties=false


#PROFILE
#spring.profiles.active=dev
#spring.profiles.active=prod
security.basic.enabled=false



#Server Config SSL
#desactiver cela en cas de test
server.servlet.context-path=/pmanager
#request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
enableLoggingRequestDetails=false
#server.port=8443
server.port=8080

#server.ssl.key-store-type=jks
#server.ssl.key-store=classpath:keystore/selfsigned.jks
#server.ssl.key-store-password=tomcat
#server.ssl.key-alias=tomcat
#security.require-ssl=true


#AUTH_API_KEY
custom.api.auth.http.tokenName=AUTH_API_KEY
custom.api.auth.http.tokenValue=abcd123456

#WS
url.service=ws

ws.redirect.user=redirect:/ws/announce/announces




#---------HIBERBNATE-CONFIGURATION-------------

# Database
db.driver= org.h2.Driver
db.url= jdbc:h2:tcp://localhost/../../../db/manager
hibernate.datasource.url= jdbc:h2:tcp://localhost/../../../db/manager
db.username= sa
db.password=

# Hibernate
#configuration de dessus plus la ligne en dessous
entitymanager.packagesToScan=cm.packagemanager.pmanager.*
hibernate.default_schema=PUBLIC
connection.pool_size=1
transaction.factory_class=org.hibernate.transaction.JDBCTransactionFactory
current_session_context_class=thread
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
hibernate.enable_lazy_load_no_trans=true

#---------------------------------------------------------------------------
#MAIL PROPERTIES

#Google Config
#mail.smtp.auth=true
#mail.smtp.starttls.enable=true
#mail.smtp.host=smtp.gmail.com
#mail.smtp.port= 587
#mail.admin.username=pmanager2020
#mail.admin.password=pmanager2020



mail.smtp.auth=true
mail.smtp.starttls.enable=true
mail.smtp.host=smtp.live.com
mail.smtp.port= 25

mail.admin.username=dimipasc@hotmail.com
mail.admin.password=Orlynn1anais1986yann
mail.admin.email=packagemanager2020@gmail.com
mail.email.bcc=packagemanager2020@gmail.com
mail.email.cc=packagemanager2020@gmail.com
mail.email.from=Travel Post
sendgrid.api.key=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


#spring.mail.host = smtp.gmail.com
#spring.mail.username = packagemanager2020@gmail.com
#spring.mail.password = pmanager2020

#Below Properties are needed for maintaining the session.
#Two Step verification should not be enabled for gmail.

#spring.mail.properties.mail.smtp.auth = true
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
#spring.mail.properties.mail.smtp.socketFactory.fallback = false

#CONSTANTS
constant.prod_cat_code=-
constant.buyer=B
constant.seller=S
constant.default.token=PM
constant.announceType.aeroplane=A
constant.announceType.auto=V
constant.announceType.nave=N
constant.subject=SUBJECT
pagination.size=5

#Permet de gerer le cas des beans qui ont le meme nom
# par exemple il y a le bean de hibernate transactionManager et celui
# de la configuration des batchs qui a le meme nom et au demarrage le
# programme va en erreur
spring.main.allow-bean-definition-overriding=true

#SPRING BATCH
#false: dis a springboot de ne pas demarrer spring batch durant le demarrage de l'application
spring.batch.job.enabled=false


#SPRING ACTUATOR
#management.security.enabled = false
#management.port = 9000
# Open all endpoints, Actuator only exposes health and info endpoints by default in Spring-boot
#management.endpoints.web.exposure.include=*
#management.endpoint.startup.enabled=true


#OPENTRACING & JAEGER

jaeger.agent.host=localhost
jaeger.agent.port= 16686
opentracing.jaeger.log-spans = false

#SWAGGER
swagger.api.groupname.announce = private-package-manager-rest-api-announce
swagger.api.groupname.user = private-package-manager-rest-api-user
swagger.api.groupname.message = private-package-manager-rest-api-message
swagger.api.groupname.role = private-package-manager-rest-api-role
swagger.api.groupname.review = private-package-manager-rest-api-review
swagger.api.groupname.mail = private-package-manager-rest-api-mail
swagger.api.groupname.reservation = private-package-manager-rest-api-reservation
swagger.api.groupname.image = private-package-manager-rest-api-upload-image
swagger.api.groupname.communication = private-package-manager-rest-api-dashboard-communication
swagger.api.groupname.websocket = private-package-manager-rest-api-websocket-notification
swagger.api.groupname.notification = private-package-manager-rest-api-notification





#CUSTOM ERROR PAGE
server.error.whitelabel.enabled=false
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration

#Gestion des pages statiques
spring.thymeleaf.cache = false

#NOTIFICATION FIREBASE https://blog.mestwin.net/send-push-notifications-from-spring-boot-server-side-application-using-fcm/
#https://console.firebase.google.com/u/0/project/demonotifications-7d681/settings/serviceaccounts/adminsdk
app.firebase-configuration-file=google-firebase/demonotifications.json
app.firebase-configuration-url=https://fcm.googleapis.com/fcm/send
app.firebase-configuration-server-key=AAAAQAV7XxA:APA91bGcY7R0KVoNP-9-JsNII62F2Vy-r_FzzqzMDqOo4SSKsVxdnieysqpNiQjIZYfqMUIpgUcfg8-Ei9d1CiTvi7xPCAZRlOvT9gl9CjNZxs5aKdZc9DH87LWbxWZh3IjwktFj6jVV
app.notifications.defaults={topic: 'common', title: 'Common topic - Hello', message: 'Sending test message \uD83D\uDE42', token: 'ss22t03wz208eg:APA2idkkow223FE_0v5yHxqCLTyxAQafj6nWaqi4QzwZTW004q1PUux63UsFN', payloadMessageId: '123', payloadData: 'Hello. This is payload content.'}


#SERVER SESSION TIMEOUT CONFIG
server.session.cookie.max-age=300
server.session.timeout=300


#server.session.cookie.comment = #Comment session cookie.
#server.session.cookie.domain =  #Session cookie domain.
#server.session.cookie.http-only =The #"HttpOnly" sign is a session cookie.
#server.session.cookie.max-age =  # The maximum age of the session cookie (in seconds).
#server.session.cookie.name =  #Session cookie name.
#server.session.cookie.path =  # The path of the session cookie.
#server.session.cookie.secure =  The #"Secure" sign is a session cookie.
#server.session.persistent =  false #Continue session data between restarts.
#server.session.store-dir =  # The directory used to store session data.
#server.session.timeout =  #Session timeout (seconds).
#server.session.tracking-modes = #Session tracking mode (one or more of the following: "cookie", "url", "ssl").