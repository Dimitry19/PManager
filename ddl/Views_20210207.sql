--CREATE SCHEMA VIEWS;

DROP VIEW VIEWS.V_RESERVATION_RECEIVED;
CREATE VIEW   VIEWS.V_RESERVATION_RECEIVED AS
SELECT   R.ID,
         R.DESCRIPTION,
         R.WEIGTH,
         R.VALIDATE,
         A.ID AS R_ANNOUNCE_ID,A.DEPARTURE,
         A.ARRIVAL,A.START_DATE, A.END_DATE,
         U.ID AS R_USER_ID,U.FIRST_NAME,
         U.LAST_NAME,U.USERNAME,
         U.EMAIL,U.PHONE,U.GENDER
FROM PUBLIC.RESERVATION R
INNER JOIN ANNOUNCE A ON A.ID = R.R_ANNOUNCE_ID
INNER JOIN USER U ON A.R_USER_ID = U.ID;


DROP VIEW VIEWS.V_RESERVATION_CREATED;
CREATE VIEW VIEWS.V_RESERVATION_CREATED AS
SELECT   R.ID,
         R.DESCRIPTION,
         R.WEIGTH,
         R.VALIDATE,
         A.ID AS R_ANNOUNCE_ID,A.DEPARTURE,
         A.ARRIVAL,A.START_DATE, A.END_DATE,
         U.ID AS R_USER_ID,U.FIRST_NAME,
         U.LAST_NAME,U.USERNAME,
         U.EMAIL,U.PHONE,U.GENDER
FROM PUBLIC.RESERVATION R
         INNER JOIN ANNOUNCE A ON A.ID = R.R_ANNOUNCE_ID
         INNER JOIN USER U ON R.R_USER_ID = U.ID;


DROP VIEW VIEWS.VALID_RESERVATION_RECEIVED;
CREATE VIEW   VIEWS.VALID_RESERVATION_RECEIVED AS
SELECT   R.ID,
         R.DESCRIPTION,
         R.WEIGTH,
         R.VALIDATE,
         A.ID AS R_ANNOUNCE_ID,A.DEPARTURE,
         A.ARRIVAL,A.START_DATE, A.END_DATE,
         U.ID AS R_USER_ID,U.FIRST_NAME,
         U.LAST_NAME,U.USERNAME,
         U.EMAIL,U.PHONE,U.GENDER
FROM PUBLIC.RESERVATION R
         INNER JOIN ANNOUNCE A ON A.ID = R.R_ANNOUNCE_ID
         INNER JOIN USER U ON A.R_USER_ID = U.ID
WHERE  R.CANCELLED IS FALSE
        AND A.CANCELLED IS FALSE
        AND A.STATUS ='VALID'
        AND R.STATUS='VALID';


DROP VIEW VIEWS.VALID_RESERVATION_CREATED;
CREATE VIEW VIEWS.VALID_RESERVATION_CREATED AS
SELECT R.ID,
       R.DESCRIPTION,
       R.WEIGTH,
       R.VALIDATE,
       A.ID AS R_ANNOUNCE_ID,A.DEPARTURE,
       A.ARRIVAL,A.START_DATE, A.END_DATE,
       U.ID AS R_USER_ID,U.FIRST_NAME,
       U.LAST_NAME,U.USERNAME,
       U.EMAIL,U.PHONE,U.GENDER
FROM PUBLIC.RESERVATION R
         INNER JOIN ANNOUNCE A ON A.ID = R.R_ANNOUNCE_ID
         INNER JOIN USER U ON R.R_USER_ID = U.ID
WHERE  R.CANCELLED IS FALSE
        AND A.CANCELLED IS FALSE
        AND A.STATUS ='VALID'
        AND R.STATUS='VALID';


DROP VIEW VIEWS.V_RESERVATION_CATEGORY;
CREATE VIEW VIEWS.V_RESERVATION_CATEGORY AS
SELECT CONCAT_WS('_',RESERVATION_ID,CATEGORIES_CODE) AS ID,
       RESERVATION_ID AS R_ID, CATEGORIES_CODE AS CODE
FROM  RESERVATION_CATEGORY;
